Expect valid jsdoc-block definition at Scripts/Controller/OdysseyController.js :
    59 |    extend(OdysseyController.prototype, new OdysseyEventDispatchInterface());
    60 |    OdysseyController.CONTROL_OVERLAY_CLICK = 0;
    61 |    OdysseyController.prototype.handleControlOverlayClick = function (e) {
--------------------------------------------------------------------^
    62 |        var Odyssey = this.context,
    63 |            xOffset = getX(e.target, Odyssey.overlayCanvases) * Odyssey.sizeX,

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyController.js :
    72 |    };
    73 |
    74 |    OdysseyController.prototype.setControlManager = function (controlManager) {
------------------------------------------------------------^
    75 |        this.controlManager = controlManager;
    76 |    };

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyController.js :
    75 |        this.controlManager = controlManager;
    76 |    };
    77 |    OdysseyController.prototype.setContext = function (Odyssey) {
-----------------------------------------------------^
    78 |        this.context = Odyssey;
    79 |    };

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyController.js :
    78 |        this.context = Odyssey;
    79 |    };
    80 |    OdysseyController.prototype.disable = function (controlID) {
--------------------------------------------------^
    81 |        this.controlStates[controlID] = false;
    82 |    };

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyController.js :
    81 |        this.controlStates[controlID] = false;
    82 |    };
    83 |    OdysseyController.prototype.enable = function (controlID) {
-------------------------------------------------^
    84 |        this.controlStates[controlID] = true;
    85 |    };

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyController.js :
    84 |        this.controlStates[controlID] = true;
    85 |    };
    86 |    OdysseyController.prototype.isDisabled = function (controlID) {
-----------------------------------------------------^
    87 |        return (this.controlStates[controlID] === false);
    88 |    };

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyController.js :
    87 |        return (this.controlStates[controlID] === false);
    88 |    };
    89 |    OdysseyController.prototype.isEnabled = function (controlID) {
----------------------------------------------------^
    90 |        // Controls are enabled by default.
    91 |        return (!this.isDisabled(controlID));

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyController.js :
    91 |        return (!this.isDisabled(controlID));
    92 |    };
    93 |    OdysseyController.prototype.initialize = function () {
-----------------------------------------------------^
    94 |        var ctx = this;
    95 |        // Initialize the canvas selection.

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyController.js :
    94 |        var ctx = this;
    95 |        // Initialize the canvas selection.
    96 |        function dispatchControl() {
----------------^
    97 |            ctx.handleControlOverlayClick();
    98 |        }

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyControllerAttributor.js :
     1 |var OdysseyControllerAttributor = (function () {
     2 |    "use strict";
     3 |    function OdysseyControllerAttributor() {}
------------^
     4 |    /**
     5 |     * Sets the controller. This object should contain methods to bind controls.

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyControlManager.js :
     2 |var OdysseyControlManager = (function () {
     3 |    "use strict";
     4 |    function OdysseyControlManager() {
------------^
     5 |        this.eventDispatcher = new OdysseyEventDispatcher();
     6 |        this.controls = [];

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyControlManager.js :
    11 |    extend(OdysseyControlManager.prototype, new OdysseyControllerAttributor());
    12 |
    13 |    OdysseyControlManager.prototype.addControl = function (control) {
---------------------------------------------------------^
    14 |        this.controls.push(control);
    15 |        control.setParentEventHandler(this.eventDispatcher);

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyLinkClickControl.js :
    63 |    };
    64 |
    65 |    OdysseyLinkClickControl.handleClickProxy = function (ctx) {
-------------------------------------------------------^
    66 |        return function (e) {
    67 |            if (!ctx.processClick(e.target)) {

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyMapSearch.js :
    15 |    // TODO CLEANUP : do we use this method or OdysseyMapSearch.worker.onmessage ?
    16 |    // does not seem to be used.
    17 |    window.onmessage = function handleMessage(e) {
-------------------------------^
    18 |        var id, type, data;
    19 |        if (e.hasOwnProperty('id')) {

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyMapSearch.js :
    49 |    */
    50 |
    51 |    function OdysseyMapSearchRequest(action) {
------------^
    52 |        this.eventDispatcher = new OdysseyEventDispatcher();
    53 |        this.action = action;

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyMapSearch.js :
    55 |    }
    56 |    extend(OdysseyMapSearchRequest.prototype, new OdysseyEventDispatchInterface());
    57 |    OdysseyMapSearchRequest.prototype.setData = function (data) {
--------------------------------------------------------^
    58 |        this.data = data;
    59 |    };

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyMapSearch.js :
    58 |        this.data = data;
    59 |    };
    60 |    OdysseyMapSearchRequest.prototype.setID = function (id) {
------------------------------------------------------^
    61 |        this.id = id;
    62 |    };

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyMapSearch.js :
    62 |    };
    63 |
    64 |    function OdysseyMapSearch() {
------------^
    65 |        var ctx = this;
    66 |        this.worker = new Worker("Odyssey/Scripts/Controller/Search.Worker.js");

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyMapSearch.js :
    68 |        this.messages = [];
    69 |
    70 |        this.worker.onmessage = function (e) {
----------------------------------------^
    71 |            var msg = JSON.parse(e.data), id = msg.id, handler;
    72 |            // Request handler for this message ID.

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyMapSearch.js :
    83 |    extend(OdysseyMapSearch.prototype, new OdysseyEventDispatchInterface());
    84 |
    85 |    OdysseyMapSearch.prototype.createRequest = function (type, data) {
-------------------------------------------------------^
    86 |        var req = new OdysseyMapSearchRequest(type);
    87 |        req.setParentEventHandler(this.eventDispatcher);

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyMapSearch.js :
    92 |    };
    93 |
    94 |    OdysseyMapSearch.prototype.sendRequest = function (req) {
-----------------------------------------------------^
    95 |        this.worker.postMessage(JSON.stringify(req));
    96 |    };

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyMapSearch.js :
    96 |    };
    97 |
    98 |    OdysseyMapSearch.prototype.find = function (o, fnFind, fnComplete) {
----------------------------------------------^
    99 |        var data, req;
   100 |        data = {

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyMapSearch.js :
   113 |    };
   114 |
   115 |    OdysseyMapSearch.prototype.sendData = function (maps) {
--------------------------------------------------^
   116 |        var req = this.createRequest("send", maps);
   117 |        this.sendRequest(req);

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyNavigationControl.js :
   122 |    };
   123 |
   124 |    OdysseyNavigationControl.prototype.initialize = function () {
------------------------------------------------------------^
   125 |        var ctx = this,
   126 |            $body = $(document.body),

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyOverlayControl.js :
     2 |var OdysseyOverlayControl = (function () {
     3 |    "use strict";
     4 |    function OdysseyOverlayControl() {
------------^
     5 |        this.eventDispatcher = new OdysseyEventDispatcher();
     6 |    }

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyOverlayControl.js :
     7 |    extend(OdysseyOverlayControl.prototype, new OdysseyEventDispatchInterface());
     8 |
     9 |    OdysseyOverlayControl.clearCanvas = function clearCanvas(cvs, xStart, yStart, width, height) {
------------------------------------------------^
    10 |        cvs.getContext('2d').clearRect(xStart, yStart, width, height);
    11 |    };

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyOverlayControl.js :
    11 |    };
    12 |
    13 |    OdysseyOverlayControl.unpaintAll = function unpaintAll() {
-----------------------------------------------^
    14 |        var canvases = this.context.overlayCanvases, i, len = canvases.length;
    15 |        for (i = 0; i < len; i += 1) {

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyOverlayControl.js :
    18 |    };
    19 |
    20 |    OdysseyOverlayControl.prototype.select = function select(pos) {
-----------------------------------------------------^
    21 |        var index = this.context.getCanvasSectionIndex(pos.x, pos.y), cvs, ctx;
    22 |        if (index !== -1) {

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyOverlayControl.js :
    28 |    };
    29 |
    30 |    OdysseyOverlayControl.prototype.unselect = function unselect(pos) {
-------------------------------------------------------^
    31 |        var index = this.context.getCanvasSectionIndex(pos.x, pos.y), cvs;
    32 |        if (index !== -1) {

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyOverlayControl.js :
    36 |    };
    37 |
    38 |    OdysseyOverlayControl.prototype.setContext = function (Odyssey) {
---------------------------------------------------------^
    39 |        this.context = Odyssey;
    40 |    };

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyOverlayControl.js :
    40 |    };
    41 |
    42 |    OdysseyOverlayControl.prototype.update = function () {
-----------------------------------------------------^
    43 |        // TODO. Need access to position.
    44 |    };

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyWorldMapControl.js :
     3 |var OdysseyWorldMapControl = (function ($) {
     4 |    "use strict";
     5 |    function OdysseyWorldMapControl() {
------------^
     6 |        this.eventDispatcher = new OdysseyEventDispatcher();
     7 |        this.mouseIsDown = false;

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyWorldMapControl.js :
    11 |    extend(OdysseyWorldMapControl.prototype, new OdysseyModelAttributor());
    12 |
    13 |    OdysseyWorldMapControl.prototype.processShowClick = function () {
----------------------------------------------------------------^
    14 |        this.getView().getWorldMap().show();
    15 |    };

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyWorldMapControl.js :
    15 |    };
    16 |
    17 |    OdysseyWorldMapControl.prototype.processHideClick = function () {
----------------------------------------------------------------^
    18 |        this.getView().getWorldMap().hide();
    19 |    };

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyWorldMapControl.js :
    19 |    };
    20 |
    21 |    OdysseyWorldMapControl.prototype.setPosition = function (x, y, z) {
-----------------------------------------------------------^
    22 |        this.getView().getWorldMap().setMapPosition(x, y, z);
    23 |    };

Expect valid jsdoc-block definition at Scripts/Controller/OdysseyWorldMapControl.js :
    23 |    };
    24 |
    25 |    OdysseyWorldMapControl.prototype.initialize = function () {
----------------------------------------------------------^
    26 |        var ctx = this;
    27 |        $("#OdysseyOpenMinimap").click(function () {

Expect valid jsdoc-block definition at Scripts/Controller/Search.Worker.js :
    11 |
    12 |    /* Utility functions */
    13 |    function extend(a, b) {
------------^
    14 |        var p;
    15 |        for (p in b) {

Expect valid jsdoc-block definition at Scripts/Controller/Search.Worker.js :
    21 |    }
    22 |
    23 |    function OdysseySearchResult() {
------------^
    24 |        this.position = {};
    25 |        this.items = [];

Expect valid jsdoc-block definition at Scripts/Controller/Search.Worker.js :
    26 |        this.creatures = [];
    27 |    }
    28 |    OdysseySearchResult.prototype.setPosition = function (o) {
--------------------------------------------------------^
    29 |        this.position.x = o.x;
    30 |        this.position.y = o.y;

Expect valid jsdoc-block definition at Scripts/Controller/Search.Worker.js :
    31 |        this.position.z = o.z;
    32 |    };
    33 |    OdysseySearchResult.prototype.setItems = function (items) {
-----------------------------------------------------^
    34 |        Array.prototype.push.apply(this.items, items);
    35 |    };

Expect valid jsdoc-block definition at Scripts/Controller/Search.Worker.js :
    34 |        Array.prototype.push.apply(this.items, items);
    35 |    };
    36 |    OdysseySearchResult.prototype.setCreatures = function (creatures) {
---------------------------------------------------------^
    37 |        Array.prototype.push.apply(this.creatures, creatures);
    38 |    };

Expect valid jsdoc-block definition at Scripts/Controller/Search.Worker.js :
    38 |    };
    39 |
    40 |    function setData(msg) {
------------^
    41 |        extend(savedMaps, msg.data);
    42 |    }

Expect valid jsdoc-block definition at Scripts/Controller/Search.Worker.js :
    42 |    }
    43 |
    44 |    function resolveOffset(x, y) {
------------^
    45 |        return (x + (y << 8));
    46 |    }

Expect valid jsdoc-block definition at Scripts/Controller/Search.Worker.js :
    46 |    }
    47 |
    48 |    function getTile(map, x, y) {
------------^
    49 |        var offset = resolveOffset(x, y);
    50 |

Expect valid jsdoc-block definition at Scripts/Controller/Search.Worker.js :
    52 |    }
    53 |
    54 |    function mapContainsItem(map, itemID) {
------------^
    55 |        return map.Items.indexOf(itemID) !== -1;
    56 |    }

Expect valid jsdoc-block definition at Scripts/Controller/Search.Worker.js :
    56 |    }
    57 |
    58 |    function mapContainsOneOfItem(map, itemIDs) {
------------^
    59 |        var i, len = itemIDs.length;
    60 |        for (i = 0; i < len; i += 1) {

Expect valid jsdoc-block definition at Scripts/Controller/Search.Worker.js :
    66 |    }
    67 |
    68 |    function tileContainsItem(tile, itemID) {
------------^
    69 |        var i, len;
    70 |        if (tile.hasOwnProperty('Items')) {

Expect valid jsdoc-block definition at Scripts/Controller/Search.Worker.js :
    80 |    }
    81 |
    82 |    function getTileAbsolutePosition(map, x, y) {
------------^
    83 |        return {
    84 |            x: map.BaseX + x,

Expect valid jsdoc-block definition at Scripts/Controller/Search.Worker.js :
    88 |    }
    89 |
    90 |    function tileContainsCreature(tile, creature) {
------------^
    91 |        if (tile.hasOwnProperty('creatures')) {
    92 |            return tile.creatures.indexOf(creature) !== -1;

Expect valid jsdoc-block definition at Scripts/Controller/Search.Worker.js :
    95 |    }
    96 |
    97 |    function searchMap(map, o) {
------------^
    98 |        var mapX, mapY, i, len, searchItems, searchCreatures, tile, results = [], itemsFound = [], creaturesFound = [], r;
    99 |        searchItems = (o && o.data && o.data.items) || [];

Expect valid jsdoc-block definition at Scripts/Controller/Search.Worker.js :
   144 |        }
   145 |    }
   146 |    function searchData(o) {
------------^
   147 |        var map, globalResultSet = [], result;
   148 |        for (map in savedMaps) {

Expect valid jsdoc-block definition at Scripts/Controller/Search.Worker.js :
   161 |    }
   162 |
   163 |    onmessage = function (e) {
------------------------^
   164 |        var msg = JSON.parse(e.data);
   165 |

Expect valid jsdoc-block definition at Scripts/Controller/Search.Worker.js :
   167 |        if (msg.action === 'search') {
   168 |            searchData(extend(msg, {
   169 |                onfind: function (result) {
--------------------------------^
   170 |                    var request = {
   171 |                        result: result,

Expect valid jsdoc-block definition at Scripts/Controller/Search.Worker.js :
   175 |                    postMessage(JSON.stringify(request));
   176 |                },
   177 |                oncomplete: function (results) {
------------------------------------^
   178 |                    var request = {
   179 |                        results: results,

Expect valid jsdoc-block definition at Scripts/Events/OdysseyBinaryFileErrorEvent.js :
     2 |var OdysseyBinaryFileErrorEvent = (function () {
     3 |    "use strict";
     4 |    function OdysseyBinaryFileErrorEvent(context) {
------------^
     5 |        this.file = context;
     6 |    }

Expect valid jsdoc-block definition at Scripts/Events/OdysseyBinaryFileLoadedEvent.js :
     2 |var OdysseyBinaryFileLoadedEvent = (function () {
     3 |    "use strict";
     4 |    function OdysseyBinaryFileLoadedEvent(context) {
------------^
     5 |        this.file = context;
     6 |    }

Expect valid jsdoc-block definition at Scripts/Events/OdysseyEvent.js :
    11 |    }
    12 |    OdysseyEvent.prototype.propagationStopped = false;
    13 |    OdysseyEvent.prototype.stopPropagation = function () {
-----------------------------------------------------^
    14 |        this.propagationStopped = true;
    15 |    };

Expect valid jsdoc-block definition at Scripts/Events/OdysseyEvent.js :
    15 |    };
    16 |    OdysseyEvent.prototype.defaultPrevented = false;
    17 |    OdysseyEvent.prototype.preventDefault = function () {
----------------------------------------------------^
    18 |        this.defaultPrevented = true;
    19 |    };

Expect valid jsdoc-block definition at Scripts/Events/OdysseyEventDispatcher.js :
     8 |        this.events = {};
     9 |    }
    10 |    OdysseyEventDispatcher.prototype.toJSON = function () {
------------------------------------------------------^
    11 |        // Do not serialize this object, as it is a container for functions.
    12 |        return;

Expect valid jsdoc-block definition at Scripts/Events/OdysseyEventDispatcher.js :
    13 |    };
    14 |    OdysseyEventDispatcher.prototype.parent = null;
    15 |    OdysseyEventDispatcher.prototype.getParentEventHandler = function () {
---------------------------------------------------------------------^
    16 |        return this.parent;
    17 |    };

Expect valid jsdoc-block definition at Scripts/Events/OdysseyEventDispatcher.js :
    16 |        return this.parent;
    17 |    };
    18 |    OdysseyEventDispatcher.prototype.setParentEventHandler = function (parent) {
---------------------------------------------------------------------^
    19 |        this.parent = parent;
    20 |    };

Expect valid jsdoc-block definition at Scripts/Events/OdysseyEventDispatcher.js :
    19 |        this.parent = parent;
    20 |    };
    21 |    OdysseyEventDispatcher.prototype.getEventHandler = function (type) {
---------------------------------------------------------------^
    22 |        if (!this.events.hasOwnProperty(type)) {
    23 |            this.events[type] = new OdysseyEventHandler(type);

Expect valid jsdoc-block definition at Scripts/Events/OdysseyEventDispatcher.js :
    26 |    };
    27 |
    28 |    OdysseyEventDispatcher.prototype.dispatch = function (ctx, e) {
--------------------------------------------------------^
    29 |        var handler = this.getEventHandler(e.type), parent;
    30 |        handler.fire(ctx, e);

Expect valid jsdoc-block definition at Scripts/Events/OdysseyEventDispatcher.js :
    38 |    };
    39 |
    40 |    OdysseyEventDispatcher.prototype.addListener = function (type, fn) {
-----------------------------------------------------------^
    41 |        var handler = this.getEventHandler(type);
    42 |        handler.addListener(fn);

Expect valid jsdoc-block definition at Scripts/Events/OdysseyEventDispatcher.js :
    43 |    };
    44 |
    45 |    OdysseyEventDispatcher.prototype.removeListener = function (type, fn) {
--------------------------------------------------------------^
    46 |        var handler = this.getEventHandler(type);
    47 |        handler.removeListener(fn);

Expect valid jsdoc-block definition at Scripts/Events/OdysseyEventHandler.js :
     1 |var OdysseyEventHandler = (function () {
     2 |    "use strict";
     3 |    function OdysseyEventHandler(type) {
------------^
     4 |        this.type = type;
     5 |        this.listeners = [];

Expect valid jsdoc-block definition at Scripts/Events/OdysseyEventHandler.js :
     5 |        this.listeners = [];
     6 |    }
     7 |    OdysseyEventHandler.prototype.fire = function (ctx, e) {
-------------------------------------------------^
     8 |        var i, len = this.listeners.length;
     9 |        for (i = 0; (i < len && !e.propagationStopped); i += 1) {

Expect valid jsdoc-block definition at Scripts/Events/OdysseyEventHandler.js :
    12 |    };
    13 |
    14 |    OdysseyEventHandler.prototype.addListener = function (fn) {
--------------------------------------------------------^
    15 |        this.listeners.push(fn);
    16 |    };

Expect valid jsdoc-block definition at Scripts/Events/OdysseyEventHandler.js :
    16 |    };
    17 |
    18 |    OdysseyEventHandler.prototype.removeListener = function (fn) {
-----------------------------------------------------------^
    19 |        var index = this.listeners.indexOf(fn), len;
    20 |        if (index !== -1) {

Expect valid jsdoc-block definition at Scripts/Events/OdysseyLinkClickEvent.js :
     2 |var OdysseyLinkClickEvent = (function () {
     3 |    "use strict";
     4 |    function OdysseyLinkClickEvent(x, y, z) {
------------^
     5 |        this.x = x;
     6 |        this.y = y;

Expect valid jsdoc-block definition at Scripts/Events/OdysseyResourceManagerCompleteEvent.js :
     2 |var OdysseyResourceManagerCompleteEvent = (function () {
     3 |    "use strict";
     4 |    function OdysseyResourceManagerCompleteEvent() {}
------------^
     5 |    extend(OdysseyResourceManagerCompleteEvent.prototype, new OdysseyEvent("OdysseyResourceManagerComplete"));
     6 |

Expect valid jsdoc-block definition at Scripts/Events/OdysseySpriteIndexLoadedEvent.js :
     2 |var OdysseySpriteIndexLoadedEvent = (function () {
     3 |    "use strict";
     4 |    function OdysseySpriteIndexLoadedEvent() {}
------------^
     5 |    extend(OdysseySpriteIndexLoadedEvent.prototype, new OdysseyEvent('OdysseySpriteIndexLoaded'));
     6 |

Expect valid jsdoc-block definition at Scripts/Events/OdysseyWorldMapHideEvent.js :
     2 |var OdysseyWorldMapHideEvent = (function () {
     3 |    "use strict";
     4 |    function OdysseyWorldMapHideEvent() {}
------------^
     5 |    extend(OdysseyWorldMapHideEvent.prototype, new OdysseyEvent('OdysseyWorldMapHide'));
     6 |

Expect valid jsdoc-block definition at Scripts/Events/OdysseyWorldMapShowEvent.js :
     2 |var OdysseyWorldMapShowEvent = (function () {
     3 |    "use strict";
     4 |    function OdysseyWorldMapShowEvent() {}
------------^
     5 |    extend(OdysseyWorldMapShowEvent.prototype, new OdysseyEvent('OdysseyWorldMapShow'));
     6 |

Expect valid jsdoc-block definition at Scripts/Events/OdysseyWorldMapToggleEvent.js :
     2 |var OdysseyWorldMapToggleEvent = (function () {
     3 |    "use strict";
     4 |    function OdysseyWorldMapToggleEvent() {}
------------^
     5 |    extend(OdysseyWorldMapToggleEvent.prototype, new OdysseyEvent('OdysseyWorldMapToggle'));
     6 |

Expect valid jsdoc-block definition at Scripts/Generics/Helper.js :
    18 |    };
    19 |
    20 |    ctx.count = function count(arr, val) {
------------------------^
    21 |        var cnt = 0, i, len = arr.length;
    22 |        for (i = 0; i < len; i += 1) {

Expect valid jsdoc-block definition at Scripts/Generics/Helper.js :
    28 |    };
    29 |
    30 |    ctx.extend = function (proto) {
-------------------------^
    31 |        var k, i, o;
    32 |        for (i = arguments.length - 1; i > 0; i -= 1) {

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
    22 |
    23 |        // Getter for private fileUID.
    24 |        this.getUniqueFileID = function () {
---------------------------------------^
    25 |            var id = fileUID;
    26 |            fileUID += 1;

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
    47 |
    48 |    // Gets the Bitmask ID (property name of the bitmask) for imageID.
    49 |    ResourceManager.getFileBitmaskID = function (imageID) {
-----------------------------------------------^
    50 |        return Math.floor(imageID / 32);
    51 |    };

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
    51 |    };
    52 |    // Gets the Bitmask value (if state is true) for imageID.
    53 |    ResourceManager.getFileBitmask = function (imageID) {
---------------------------------------------^
    54 |        return 1 << (imageID % 32);
    55 |    };

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
    56 |
    57 |    // Set the filepath prefix.
    58 |    ResourceManager.prototype.setFilepathPrefix = function (path) {
----------------------------------------------------------^
    59 |        this.prefix = path;
    60 |    };

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
    86 |    };
    87 |
    88 |    ResourceManager.prototype.getValue = function (resourceID) {
-------------------------------------------------^
    89 |        var bitmaskID, bitmask;
    90 |        bitmaskID = ResourceManager.getFileBitmaskID(resourceID);

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
    94 |    };
    95 |
    96 |    ResourceManager.prototype.setValue = function (resourceID, value) {
-------------------------------------------------^
    97 |        var bitmaskID, bitmask;
    98 |        if (value !== this.getValue(resourceID)) {

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
   105 |        return false;
   106 |    };
   107 |    ResourceManager.prototype.getResource = function (index) {
----------------------------------------------------^
   108 |        if (this.resources[index] === undefined) {
   109 |            //throw new Error("Resource not found at index " + index + ".");

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
   112 |        return this.resources[index];
   113 |    };
   114 |    ResourceManager.prototype.getResourceImage = function (index) {
---------------------------------------------------------^
   115 |        var file = this.getResource(index);
   116 |        if (file && file.resource instanceof Image) {

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
   118 |        }
   119 |    };
   120 |    ResourceManager.prototype.getResourceData = function (index) {
--------------------------------------------------------^
   121 |        var resource = this.getResource(index);
   122 |        if (resource) {

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
   124 |        }
   125 |    };
   126 |    ResourceManager.prototype.isLoading = function () {
--------------------------------------------------^
   127 |        var i, len = arguments.length, resource;
   128 |        for (i = 0; i < len; i += 1) {

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
   135 |    };
   136 |
   137 |    ResourceManager.prototype.isLoaded = function () {
-------------------------------------------------^
   138 |        var i, len = arguments.length, resource;
   139 |        for (i = 0; i < len; i += 1) {

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
   146 |    };
   147 |
   148 |    ResourceManager.prototype.isNotFound = function () {
---------------------------------------------------^
   149 |        var i, len = arguments.length, resource;
   150 |        for (i = 0; i < len; i += 1) {

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
   157 |    };
   158 |
   159 |    ResourceManager.prototype.hasFailed = function () {
--------------------------------------------------^
   160 |        // Returns true if at least one has failed.
   161 |        var i, len = arguments.length, resource;

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
   169 |    };
   170 |
   171 |    ResourceManager.prototype.isAwaitingLoad = function (o) {
-------------------------------------------------------^
   172 |        return this.resourcesAwaitingLoadMap.hasOwnProperty(o);
   173 |    };

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
   173 |    };
   174 |
   175 |    ResourceManager.prototype.setAwaitingLoad = function (id) {
--------------------------------------------------------^
   176 |        if (!this.isAwaitingLoad(id)) {
   177 |            this.resourcesAwaitingLoadMap[id] = 0;

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
   182 |
   183 |    // TODO
   184 |    ResourceManager.prototype.filterAwaiting = function () {
-------------------------------------------------------^
   185 |        var i, len = this.resourcesAwaitingLoad.length, r, skip = 0;
   186 |        for (i = 0; i < len; i += 1) {

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
   205 |    };
   206 |
   207 |    ResourceManager.prototype.sortAwaiting = function () {
-----------------------------------------------------^
   208 |        var map = this.resourcesAwaitingLoadMap;
   209 |        this.resourcesAwaitingLoad.sort(function (a, b) {

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
   212 |    };
   213 |
   214 |    ResourceManager.prototype.start = function (n) {
----------------------------------------------^
   215 |        var i;
   216 |        // Let n = 1 if not set or 0.

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
   228 |    };
   229 |
   230 |    ResourceManager.prototype.stop = function (n) {
---------------------------------------------^
   231 |        this.activeLoaders -= n;
   232 |    };

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
   232 |    };
   233 |
   234 |    ResourceManager.prototype.stopLoader = function () {
---------------------------------------------------^
   235 |        this.stop(1);
   236 |    };

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
   236 |    };
   237 |
   238 |    ResourceManager.prototype.startLoader = function () {
----------------------------------------------------^
   239 |        this.start(1);
   240 |    };

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
   240 |    };
   241 |
   242 |    ResourceManager.prototype.load = function (id) {
---------------------------------------------^
   243 |        if (!(this.isLoading(id) || this.isLoaded(id))) {
   244 |            this.setAwaitingLoad(id);

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
   249 |    };
   250 |
   251 |    ResourceManager.prototype.canOpenConnection = function () {
----------------------------------------------------------^
   252 |        return (this.activeLoaders < ResourceManager.MAX_CONNECTIONS);
   253 |    };

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
   253 |    };
   254 |
   255 |    ResourceManager.prototype.loadNextResource = function () {
---------------------------------------------------------^
   256 |        var id = this.getNextLoadResourceID();
   257 |        if (id === -1) {

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
   262 |    };
   263 |
   264 |    ResourceManager.prototype.getNextLoadResourceID = function () {
--------------------------------------------------------------^
   265 |        var r, arr = this.resourcesAwaitingLoad;
   266 |        this.resourceIndex = arr.length;

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
   277 |    };
   278 |
   279 |    ResourceManager.prototype.resourceExists = function (id) {
-------------------------------------------------------^
   280 |        return this.getResource(id) !== null;
   281 |    };

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
   281 |    };
   282 |
   283 |    ResourceManager.prototype.isBusy = function () {
-----------------------------------------------^
   284 |        return (this.resourcesAwaitingLoad.length > 0);
   285 |    };

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
   285 |    };
   286 |
   287 |    ResourceManager.prototype.loadResource = function (id) {
-----------------------------------------------------^
   288 |        var resource = this.getResource(this.resourcesAwaitingLoad[id]),
   289 |            exists = (this.resourcesAwaitingLoad[id] !== undefined) && this.resourceExists(this.resourcesAwaitingLoad[id]);

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
   311 |    };
   312 |
   313 |    ResourceManager.prototype.getResourceIDByFilename = function (filename) {
----------------------------------------------------------------^
   314 |        return this.getResourceIDByFilenameWithPrefix(this.prefix + filename);
   315 |    };

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
   315 |    };
   316 |
   317 |    ResourceManager.prototype.getResourceIDByFilenameWithPrefix = function (filename) {
--------------------------------------------------------------------------^
   318 |        if (!this.hasFileWithPrefix(filename)) {
   319 |            throw new Error("Resource " + filename + " does not exist.");

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
   322 |    };
   323 |
   324 |    ResourceManager.prototype.hasFile = function (filename) {
------------------------------------------------^
   325 |        return this.hasFileWithPrefix(this.prefix + filename);
   326 |    };

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
   326 |    };
   327 |
   328 |    ResourceManager.prototype.hasFileWithPrefix = function (filename) {
----------------------------------------------------------^
   329 |        return this.srcs.hasOwnProperty(filename);
   330 |    };

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
   330 |    };
   331 |
   332 |    ResourceManager.prototype.getLoadedCount = function () {
-------------------------------------------------------^
   333 |        return this.loaded.length;
   334 |    };

Expect valid jsdoc-block definition at Scripts/Generics/ResourceManager.js :
   334 |    };
   335 |
   336 |    ResourceManager.prototype.getLoadingCount = function () {
--------------------------------------------------------^
   337 |        return this.resourcesAwaitingLoad.length;
   338 |    };

Expect valid jsdoc-block definition at Scripts/Main.js :
   125 |
   126 |            // Populates the resource manager.
   127 |            function populate() {
--------------------^
   128 |                OdysseySpriteIndex.populateResourceManager(spriteIndex, view.getResourceManager());
   129 |            }

Expect valid jsdoc-block definition at Scripts/Main.js :
   253 |
   254 |            // TODO implement
   255 |            function updateProgressBarLoadingCore() {
--------------------^
   256 |                var loading = 0, loaded = 0;
   257 |                loading += view.getModel().getResourceManager().getLoadingCount();

Expect valid jsdoc-block definition at Scripts/Main.js :
   260 |                status.setProgress(Math.floor(100 * (loaded || 0) / ((loading || 0) + (loaded || 1))) / 100);
   261 |            }
   262 |            function updateProgressBarLoadingSprites() {
--------------------^
   263 |                var loading = 0, loaded = 0;
   264 |                // Loading.

Expect valid jsdoc-block definition at Scripts/Model/Dat.js :
   193 |            'url': url,
   194 |            'dataType': 'json',
   195 |            'success': function (obj) {
-------------------------------^
   196 |                // Tibia Dat JSON loaded.
   197 |                // Save data for future use.

Expect valid jsdoc-block definition at Scripts/Model/OdysseyGeography.js :
     2 |var OdysseyGeography = (function () {
     3 |    "use strict";
     4 |    function OdysseyGeography() {
------------^
     5 |        this.eventDispatcher = new OdysseyEventDispatcher();
     6 |    }

Expect valid jsdoc-block definition at Scripts/Model/OdysseyMapIndex.js :
     2 |var OdysseyMapIndex = (function () {
     3 |    "use strict";
     4 |    function OdysseyMapIndex() {
------------^
     5 |        this.eventDispatcher = new OdysseyEventDispatcher();
     6 |        this.startPosition = new Matrix3D(0, 0, 0);

Expect valid jsdoc-block definition at Scripts/Model/OdysseyMapIndex.js :
     8 |    }
     9 |    extend(OdysseyMapIndex.prototype, new OdysseyEventDispatchInterface());
    10 |    OdysseyMapIndex.prototype.setStartPosition = function (x, y, z) {
---------------------------------------------------------^
    11 |        this.startPosition.set(x, y, z);
    12 |    };

Expect valid jsdoc-block definition at Scripts/Model/OdysseyMapIndex.js :
    11 |        this.startPosition.set(x, y, z);
    12 |    };
    13 |    OdysseyMapIndex.prototype.setEndPosition = function (x, y, z) {
-------------------------------------------------------^
    14 |        this.endPosition.set(x, y, z);
    15 |    };

Expect valid jsdoc-block definition at Scripts/Model/OdysseyMapIndex.js :
    14 |        this.endPosition.set(x, y, z);
    15 |    };
    16 |    OdysseyMapIndex.prototype.addToResourceManager = function (resourceManager) {
-------------------------------------------------------------^
    17 |        var x, y, z, startX, startY, startZ, endX, endY, endZ;
    18 |        startX = MapFile.getFileX(this.startPosition.x);

Expect valid jsdoc-block definition at Scripts/Model/OdysseyModel.js :
     8 |var OdysseyModel = (function () {
     9 |    "use strict";
    10 |    function OdysseyModel() {
------------^
    11 |        this.eventDispatcher = new OdysseyEventDispatcher();
    12 |        this.world = null;

Expect valid jsdoc-block definition at Scripts/Model/OdysseyModelAttributor.js :
     1 |var OdysseyModelAttributor = (function () {
     2 |    "use strict";
     3 |    function OdysseyModelAttributor() {}
------------^
     4 |    /**
     5 |     * Sets the model. This object should contain all information required

Expect valid jsdoc-block definition at Scripts/Model/OdysseyWorld.js :
     5 |var OdysseyWorld = (function () {
     6 |    "use strict";
     7 |    function OdysseyWorld() {
------------^
     8 |        this.eventDispatcher = new OdysseyEventDispatcher();
     9 |        this.items = {};

Expect valid jsdoc-block definition at Scripts/Model/OdysseyWorld.js :
    10 |    }
    11 |    extend(OdysseyWorld.prototype, new OdysseyEventDispatchInterface());
    12 |    OdysseyWorld.prototype.tileExists = function (x, y, z) {
------------------------------------------------^
    13 |        return !(this[x] === undefined || this[x][y] === undefined || this[x][y][z] === undefined);
    14 |    };

Expect valid jsdoc-block definition at Scripts/Model/OdysseyWorld.js :
    13 |        return !(this[x] === undefined || this[x][y] === undefined || this[x][y][z] === undefined);
    14 |    };
    15 |    OdysseyWorld.prototype.getTile = function (x, y, z) {
---------------------------------------------^
    16 |        if (this.tileExists(x, y, z)) {
    17 |            return this[x][y][z];

Expect valid jsdoc-block definition at Scripts/Model/OdysseyWorld.js :
    19 |        return null;
    20 |    };
    21 |    OdysseyWorld.prototype.containsItem = function (itemID) {
--------------------------------------------------^
    22 |        return this.items.hasOwnProperty(itemID);
    23 |    };

Expect valid jsdoc-block definition at Scripts/Model/OdysseyWorld.js :
    22 |        return this.items.hasOwnProperty(itemID);
    23 |    };
    24 |    OdysseyWorld.prototype.addItem = function (itemID) {
---------------------------------------------^
    25 |        if (this.items[itemID] === undefined) {
    26 |            this.items[itemID] = 0;

Expect valid jsdoc-block definition at Scripts/Model/OdysseyWorld.js :
    28 |        this.items[itemID] += 1;
    29 |    };
    30 |    OdysseyWorld.prototype.addTile = function (x, y, z, tile) {
---------------------------------------------^
    31 |        var i, item;
    32 |        if (this[x] === undefined) {

Expect valid jsdoc-block definition at Scripts/Model/OdysseyWorldSpawns.js :
     2 |var OdysseyWorldSpawns = (function () {
     3 |    "use strict";
     4 |    function OdysseyWorldSpawns() {
------------^
     5 |        this.eventDispatcher = new OdysseyEventDispatcher();
     6 |    }

Expect valid jsdoc-block definition at Scripts/Model/ResourceManagerFile.js :
   185 |        if (!(this.resource instanceof Image)) {
   186 |            this.resource = new Image();
   187 |            this.resource.onload = function () {
-------------------------------------------^
   188 |                ctx.setIsLoading(false);
   189 |                if (!ctx.isLoaded()) {

Expect valid jsdoc-block definition at Scripts/Model/ResourceManagerFile.js :
   192 |                }
   193 |            };
   194 |            this.resource.onerror = function () {
--------------------------------------------^
   195 |                ctx.setIsLoading(false);
   196 |                ctx.setLoadFailed(true);

Expect valid jsdoc-block definition at Scripts/Model/ResourceManagerFile.js :
   264 |    };
   265 |
   266 |    ResourceManagerFile.prototype.setContents = function (o) {
--------------------------------------------------------^
   267 |        this.contents = o;
   268 |    };

Variable declarations must be the first statements of a function scope. at Scripts/View/OdysseyMinimap.js :
    61 |    OdysseyMinimap.prototype.update = function () {
    62 |        return;
    63 |        var xs, ys, zs, items, i, itemCount, itemMapColor, dx, dy;
----------------^
    64 |        xs = this.position.x - 63;
    65 |        ys = this.position.y - 63;

Expect valid jsdoc-block definition at Scripts/View/OdysseySearch.js :
     7 |        $body = $(document.body),
     8 |        $linkOpenSearch = $("#OdysseyOpenSearch");
     9 |    function toggleSearch() {
------------^
    10 |        if (active) {
    11 |            $body.removeClass("state-search-active");

Expect valid jsdoc-block definition at Scripts/View/OdysseySpriteIndex.js :
    70 |            url: src,
    71 |            dataType: 'json',
    72 |            success: function (data) {
-----------------------------^
    73 |                spriteIndex.setData(data);
    74 |                spriteIndex.setLoading(false);

Expect valid jsdoc-block definition at Scripts/View/OdysseyStatus.js :
     7 |var OdysseyStatus = (function ($) {
     8 |    "use strict";
     9 |    function OdysseyStatus() {
------------^
    10 |        /**
    11 |         * The event dispatcher. Manages Odyssey events.

Expect valid jsdoc-block definition at Scripts/View/OdysseyStatus.js :
    17 |    extend(OdysseyTileMap.prototype, new OdysseyEventDispatchInterface());
    18 |
    19 |    OdysseyStatus.prototype.getStatusTextField = function () {
---------------------------------------------------------^
    20 |        return this.ui.statusText;
    21 |    };

Expect valid jsdoc-block definition at Scripts/View/OdysseyStatus.js :
    20 |        return this.ui.statusText;
    21 |    };
    22 |    OdysseyStatus.prototype.setStatusTextField = function (element) {
---------------------------------------------------------^
    23 |        this.ui.statusText = element;
    24 |    };

Expect valid jsdoc-block definition at Scripts/View/OdysseyStatus.js :
    24 |    };
    25 |
    26 |    OdysseyStatus.prototype.setContainer = function (element) {
---------------------------------------------------^
    27 |        this.ui.container = element;
    28 |    };

Expect valid jsdoc-block definition at Scripts/View/OdysseyStatus.js :
    27 |        this.ui.container = element;
    28 |    };
    29 |    OdysseyStatus.prototype.getContainer = function () {
---------------------------------------------------^
    30 |        return this.ui.container;
    31 |    };

Expect valid jsdoc-block definition at Scripts/View/OdysseyStatus.js :
    31 |    };
    32 |
    33 |    OdysseyStatus.prototype.setProgressBar = function (element) {
-----------------------------------------------------^
    34 |        this.ui.progressBar = element;
    35 |    };

Expect valid jsdoc-block definition at Scripts/View/OdysseyStatus.js :
    34 |        this.ui.progressBar = element;
    35 |    };
    36 |    OdysseyStatus.prototype.getProgressBar = function () {
-----------------------------------------------------^
    37 |        return this.ui.progressBar;
    38 |    };

Expect valid jsdoc-block definition at Scripts/View/OdysseyStatus.js :
    38 |    };
    39 |
    40 |    OdysseyStatus.prototype.setStatusText = function (txt) {
----------------------------------------------------^
    41 |        $(this.getStatusTextField()).text(txt);
    42 |    };

Expect valid jsdoc-block definition at Scripts/View/OdysseyStatus.js :
    42 |    };
    43 |
    44 |    OdysseyStatus.prototype.setProgress = function (percent) {
--------------------------------------------------^
    45 |        this.progress = percent;
    46 |        $(this.getProgressBar()).width((100 * percent) + "%");

Expect valid jsdoc-block definition at Scripts/View/OdysseyStatus.js :
    46 |        $(this.getProgressBar()).width((100 * percent) + "%");
    47 |    };
    48 |    OdysseyStatus.prototype.update = function () {
---------------------------------------------^
    49 |        // TODO.
    50 |    };

Expect valid jsdoc-block definition at Scripts/View/OdysseyTileInfo.js :
     6 |        $ToolTipItemsCount = $(".OdysseyToolTipItem .OdysseyToolTipCount"),
     7 |        ttLength = $ToolTipItems.length;
     8 |    function OdysseyTileInfo() {
------------^
     9 |        this.eventDispatcher = new OdysseyEventDispatcher();
    10 |    }

Expect valid jsdoc-block definition at Scripts/View/OdysseyTileInfo.js :
    11 |    extend(OdysseyTileInfo.prototype, new OdysseyEventDispatchInterface());
    12 |
    13 |    OdysseyTileInfo.prototype.setContext = function (Odyssey) {
---------------------------------------------------^
    14 |        this.context = Odyssey;
    15 |    };

Expect valid jsdoc-block definition at Scripts/View/OdysseyTileInfo.js :
    14 |        this.context = Odyssey;
    15 |    };
    16 |    OdysseyTileInfo.prototype.showInfo = function (x, y, z) {
-------------------------------------------------^
    17 |        var items = this.context.getTileItems(x, y, z), i, len;
    18 |

Expect valid jsdoc-block definition at Scripts/View/OdysseyTileInfo.js :
    30 |        }
    31 |    };
    32 |    OdysseyTileInfo.prototype.update = function (model) {
-----------------------------------------------^
    33 |        // TODO
    34 |        // We need access to the tile map because it has position?

Expect valid jsdoc-block definition at Scripts/View/OdysseyTileMap.js :
   180 |    };
   181 |
   182 |    OdysseyTileMap.prototype.setContainer = function (element) {
----------------------------------------------------^
   183 |        this.container = element;
   184 |    };

Expect valid jsdoc-block definition at Scripts/View/OdysseyTileMap.js :
   184 |    };
   185 |
   186 |    OdysseyTileMap.prototype.getContainer = function () {
----------------------------------------------------^
   187 |        return this.container;
   188 |    };

Expect valid jsdoc-block definition at Scripts/View/OdysseyTileMap.js :
   556 |    };
   557 |
   558 |    OdysseyTileMap.prototype.loadMaps = function () {
------------------------------------------------^
   559 |        var currentMapPosition = this.position, xs, xe, ys, ye, zs, ze;
   560 |        // Set the range of position values to render.

Expect valid jsdoc-block definition at Scripts/View/OdysseyTileMap.js :
   616 |    };
   617 |
   618 |    OdysseyTileMap.prototype.show = function () {
--------------------------------------------^
   619 |        $(this.getContainer()).addClass("ready");
   620 |    };

Expect valid jsdoc-block definition at Scripts/View/OdysseyTileMap.js :
   620 |    };
   621 |
   622 |    OdysseyTileMap.prototype.hide = function () {
--------------------------------------------^
   623 |        $(this.getContainer()).removeClass("ready");
   624 |    };

Expect valid jsdoc-block definition at Scripts/View/OdysseyTileMap.js :
   752 |
   753 |    // TEMPORARY.
   754 |    OdysseyTileMap.prototype.updateCanvasIDs = function () {
-------------------------------------------------------^
   755 |        this.canvases[OdysseyTileMap.CANVAS_NORTHWEST_ID].setAttribute('id', 'OdysseyMapCanvas-NW');
   756 |        this.canvases[OdysseyTileMap.CANVAS_NORTH_ID].setAttribute('id', 'OdysseyMapCanvas-N');

Expect valid jsdoc-block definition at Scripts/View/OdysseyView.js :
     8 |var OdysseyView = (function () {
     9 |    "use strict";
    10 |    function OdysseyView() {
------------^
    11 |        this.eventDispatcher = new OdysseyEventDispatcher();
    12 |        this.minimap = null;

Expect valid jsdoc-block definition at Scripts/View/OdysseyViewAttributor.js :
     1 |var OdysseyViewAttributor = (function () {
     2 |    "use strict";
     3 |    function OdysseyViewAttributor() {}
------------^
     4 |    /**
     5 |     * Sets the view. This object should contain all information required

Expect valid jsdoc-block definition at Scripts/View/ToolRow.js :
     6 |        $linkToggleIcons = $("#OdysseyOpenToolRow"),
     7 |        $body = $(document.body);
     8 |    function toggleToolRow() {
------------^
     9 |        if (active) {
    10 |            $body.removeClass("state-tools-active");

Expect valid jsdoc-block definition at Scripts/View/Tooltip.js :
     6 |    var $tooltip = $("#OdysseyToolTipHeader"),
     7 |        focusPosition = new Matrix3D(0, 0, 0);
     8 |    function setTooltipPosition(x, y, z) {
------------^
     9 |    }
    10 |    function updateTooltipPosition(x, y, z) {

Expect valid jsdoc-block definition at Scripts/View/Tooltip.js :
     8 |    function setTooltipPosition(x, y, z) {
     9 |    }
    10 |    function updateTooltipPosition(x, y, z) {
------------^
    11 |    }
    12 |    // On each grid tile hover, set the focus position


160 code style errors found.
